// Userspace rules are not as restrictire as kernel side rules - rules can take arrays instead of single values,
// however, they cannot block - only kernel side can.
// So this is where you define what you would like to log or alert on. Or what should be ignored.
// Matching is sequentual, thus if you are configuring ignore rules, they should go in front of broader log or alert rules.
// Actions available here are: 'log', 'alert', or 'ignore', and unlike kernel side we can use methods like 'multi_starts_with'.

{ignore: [

],

log:  [
    {
        class: 'file',
        event: 'exec',
        directives: {
            path: { 
                starts_with: [ 
                    '/usr/bin',
                    '/usr/sbin',
                    '/usr/local/bin',
                    '/usr/local/sbin',
                ]
            }
        }
    },
    {
        class: 'file',
        event: 'open',
        directives: {
            path: { 
                starts_with: [ 
                    '/etc/passwd',
                    '/sys'
                ]
            }
        }
    }
],

alert: [
    {
        class: 'file',
        event: 'exec',
        directives: {
            path: { 
                starts_with: [ 
                    '/usr/bin/sudo',
                ]
            }
        }
    },
    {
        class: 'socket',
        event: 'listen',
        directives: {
            port: { 
                neq: [ 80, 443 ]
            }
        }
    },
    {
        class: 'socket',
        event: 'connect',
        directives: {
            port: { 
                neq: [ 53, 80, 123, 443 ]
            }
        }
    },
    {
        class: 'file',
        event: 'open',
        directives: {
            path: { 
                starts_with: [ 
                    '/etc/shadow',
                    '/proc/sys',
                    '/usr/bin/sudo'
                ]
            }
        }
    }

]}