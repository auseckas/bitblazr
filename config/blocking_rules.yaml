# To accompodate for eBPF restrictions, kernel rules are rather restrictive, you can only 'allow' or 'block'.
# For comparing integers you can only use 'eq' and 'neq', for strings additional two methods are available:
# 'starts_with' and 'ends_with'.
# All rule matches will be logged by default
# These are example rules, create rules for your own enviornment or reach out to us for commercial rules

kernel:
# Block attempts to bind to sockets that are not on port 80 or 443
- class: socket
  event: listen
  action: block
  rules:
    port:
    - neq: 80
    - neq: 443

# Monitor file executions under /usr/bin and /usr/sbin
- class: file
  event: exec
  action: allow
  rules:
    path:
    - starts_with: /usr/bin
    - starts_with: /usr/sbin

# Example of "not" rule
- class: file
  event: exec
  action: allow
  rules:
    path:
    - not:
        starts_with: /usr/bin

# Example of context rule, this one block attempts to read /etc/passwd by processes within a container
- class: file
  event: open
  context:
  - container
  action: block
  rules:
    path:
    - starts_with: /etc/passwd

# Example of "ends_with" usage
- class: file
  event: exec
  action: allow
  rules:
    path:
    - ends_with: sed

# Example of rule monitoring egress connections
- class: socket
  event: connect
  action: allow
  rules:
    ip_proto:
    - eq: tcp
    ip_type:
    - neq: private
    ip_version:
    - eq: 4
    port:
    - neq: 80
    - neq: 443

# Monitor connections for IP version 4 that do not match provided IP block
- class: socket
  event: connect
  action: block
  rules:
    ip_addr:
    - eq: 10.10.10.10/32
    ip_version:
    - eq: 4

